{"version":3,"sources":["lib/minesweeperMaker.js","lib/minesSorter.js","state/constants.js","state/store.js","state/reducers.js","state/actionCreators.js","components/square/square.jsx","components/restart/restart.jsx","components/boomModal/boomModal.jsx","components/aboutMe/aboutMe.jsx","components/gameScreen/gameScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","arg","array","priorityArray","substitute","squares","map","item","splice","injectArray","i","symbol","index","nearbyBombsCount","distances","length","checkDistance","id","isClicked","checkUniqueness","value","equalValuesArray","push","pushToArray","func","max","mines","randomValue","Math","floor","random","SORT_SQUARES","SHOW_VALUE","FINISH_GAME","reducers","require","finish","redux","createStore","combineReducers","applyMiddleware","stateData","presetField","fillMinesArray","logger","store","next","action","console","groupCollapsed","type","log","getState","groupEnd","arguments","undefined","C","square","state","Object","F_Matheus_Matheus_Souza_Desktop_Projetos_JOGOS_minesweeper_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","m","showValue","finishGame","Square","_ref","react_default","a","createElement","onClick","dispatch","setTimeout","className","Restart","BoomModal","AboutMe","href","rel","target","Game","_store$getState","restart_restart","components_square_square","key","aboutMe_aboutMe","boomModal_boomModal","App","gameScreen_gameScreen","Boolean","window","location","hostname","match","storeFactory","render","ReactDOM","src_App_0","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92fa99cc.chunk.js","sourcesContent":["// helping functions\r\nconst injectArray = (priorityArray, substitute) => {\r\n    let squares = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81]\r\n\r\n    priorityArray.map((item) => (\r\n        squares.splice(item - 1, 1, substitute)\r\n    ))\r\n\r\n    return squares\r\n}\r\n\r\n// specific functions\r\nconst checkDistance = (index, array) => {\r\n    let nearbyBombsCount = 0\r\n    const distances = [-10, -9, -8, -1, 1, 8, 9, 10]\r\n    for (let i = 0; i < distances.length; i++) {\r\n        if (array[index + distances[i]] === 'mine') {\r\n            nearbyBombsCount ++\r\n        }\r\n    }\r\n\r\n    return nearbyBombsCount\r\n\r\n}\r\n\r\nconst makeField = (array) => {\r\n    const stateArray = array.map((item, i) => {\r\n        if (item !== 'mine') {\r\n            let symbol = checkDistance(i, array)\r\n            return {\r\n                symbol,\r\n                id: i,\r\n                isClicked: false\r\n            }\r\n        } else {\r\n            return {\r\n                symbol: 'mine',\r\n                id: i,\r\n                isClicked: false\r\n            }\r\n        }\r\n    })\r\n\r\n    return stateArray\r\n}\r\n\r\nconst presetField = (arg) => {\r\n    return makeField(injectArray(arg, 'mine'))\r\n}\r\n\r\nmodule.exports = presetField","// variables\r\n\r\n// helping functions\r\nconst getRandomNumbers = (max) => {\r\n    const num = Math.floor(Math.random() * max) + 1\r\n    \r\n    return num\r\n}\r\n\r\nconst checkUniqueness = (value, array) => {\r\n    let equalValuesArray = []\r\n    \r\n    for (let i = 0; i < array.length; i++) {\r\n        if (value === array[i]) {\r\n            equalValuesArray.push(array[i])\r\n        }\r\n    }\r\n\r\n    if (equalValuesArray.length !== 0) {\r\n        return false\r\n    } else {\r\n        return true\r\n    }\r\n}\r\n\r\nconst pushToArray = (value, array) => {\r\n    array.push(value)\r\n}\r\n\r\nconst toPushOrNotToPush = (value, array, condition, func) => {\r\n    if (condition(value, array)) {\r\n        func(value, array)\r\n    }\r\n}\r\n\r\n// specific functions\r\nconst fillMinesArray = () => {\r\n    let mines = []\r\n\r\n    while (mines.length < 10) {\r\n        let randomValue = getRandomNumbers(81)\r\n        toPushOrNotToPush(randomValue, mines, checkUniqueness, pushToArray)\r\n    }\r\n\r\n    return mines\r\n}\r\n\r\nmodule.exports =  fillMinesArray","const constants = {\r\n    SORT_SQUARES: 'SORT_SQUARES',\r\n    SHOW_VALUE: 'SHOW_VALUE',\r\n    FINISH_GAME: 'FINISH_GAME'\r\n}\r\n\r\nmodule.exports = constants","// import\r\nconst reducers = require('./reducers')\r\nconst {squares, finish} = reducers\r\nconst redux = require('redux')\r\nconst {createStore, combineReducers, applyMiddleware} = redux\r\n\r\nconst presetField = require('../lib/minesweeperMaker')\r\nconst fillMinesArray = require('../lib/minesSorter')\r\n\r\n// variables\r\nconst stateData = {\r\n    \"finish\": false,\r\n    \"squares\": presetField(fillMinesArray())\r\n} \r\n\r\n// store\r\nconst logger = store => next => action => {\r\n    let result\r\n    console.groupCollapsed(\"dispatching\", action.type)\r\n    console.log('prev state', store.getState())\r\n    console.log('action', action)\r\n    result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n}\r\n\r\nconst storeFactory = (initialState=stateData) =>\r\n    applyMiddleware(logger)(createStore)(combineReducers({squares, finish}), stateData)\r\n\r\nmodule.exports = storeFactory\r\n","const C = require('./constants')\r\n\r\nexport const square = (state={}, action) => {\r\n    switch (action.type) {\r\n        case C.SHOW_VALUE:\r\n            return (state.id !== action.id) ? \r\n                state :\r\n                {\r\n                    ...state,\r\n                    isClicked: true\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const squares = (state=[], action) => {\r\n    switch (action.type) {\r\n        case C.SORT_SQUARES:\r\n            return action.squares\r\n        case C.SHOW_VALUE:\r\n            return state.map(\r\n                m => square(m, action)\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const finish = (state=false, action) => {\r\n    switch (action.type) {\r\n        case C.FINISH_GAME:\r\n            return action.finish\r\n        default:\r\n            return state\r\n    }\r\n}","// import\r\nconst C = require('./constants')\r\n\r\n// actions\r\nexport const sortSquares = (array) => ({\r\n    type: C.SORT_SQUARES,\r\n    squares: array\r\n})\r\n\r\nexport const showValue = (id) => ({\r\n    type: C.SHOW_VALUE,\r\n    id\r\n})\r\n\r\nexport const finishGame = (...arg) => {\r\n    if (arg.length !== 0) {\r\n        return {\r\n            type: C.FINISH_GAME,\r\n            finish: false\r\n        }\r\n    } else {\r\n        return {\r\n            type: C.FINISH_GAME,\r\n            finish: true\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {showValue, finishGame} from '../../state/actionCreators'\r\nimport './square.css'\r\n\r\nconst Square = ({store, symbol, isClicked, id}) => {\r\n    if (isClicked === false && symbol === 'mine') {\r\n        return <td onClick={() => {\r\n            store.dispatch(showValue(id))\r\n            setTimeout(() => store.dispatch(finishGame()), 700)\r\n        }}></td>\r\n    } else if (isClicked === true && symbol === 'mine') {\r\n        return <td><i className=\"fas fa-bomb\"></i></td>\r\n    } else if (isClicked === true) {\r\n        return <td>{symbol}</td>\r\n    } else {\r\n        return <td onClick={() => store.dispatch(\r\n            showValue(id)\r\n        )}></td>\r\n    }\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport {sortSquares, finishGame} from '../../state/actionCreators'\r\nimport presetField from '../../lib/minesweeperMaker'\r\nimport fillMinesArray from '../../lib/minesSorter'\r\nimport './restart.css'\r\n\r\nconst Restart = ({store}) => (\r\n    <p onClick={() => {\r\n        store.dispatch(\r\n            sortSquares(presetField(fillMinesArray()))\r\n        )\r\n        store.dispatch(\r\n            finishGame(1)\r\n        )\r\n    }}><i className=\"fas fa-undo\"></i></p>\r\n)\r\n\r\nexport default Restart","import React from 'react'\r\nimport './boomModal.css'\r\n\r\nconst BoomModal = () => {\r\n    return (\r\n        <div className=\"modal\">\r\n            <h1>Booom!!!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoomModal","import React from 'react'\r\nimport './aboutMe.css'\r\n\r\nconst AboutMe = () => (\r\n    <div className=\"about-me\">\r\n        <p>I am Matheus Souza and this is a portfolio project I have developed using Redux. </p>\r\n        <p>Check out my other projects on Github <a href=\"https://github.com/souzasmatheus/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <i className=\"fab fa-github\"></i>\r\n        </a>!</p>\r\n    </div>\r\n)\r\n\r\nexport default AboutMe","import React from 'react'\r\n//import {sortSquares} from '../../state/actionCreators'\r\n//import presetField from '../../lib/minesweeperMaker'\r\n//import fillMinesArray from '../../lib/minesSorter'\r\nimport './gameScreen.css'\r\n\r\n// components\r\nimport Square from '../square/square'\r\nimport Restart from '../restart/restart'\r\nimport BoomModal from '../boomModal/boomModal'\r\nimport AboutMe from '../aboutMe/aboutMe'\r\n\r\nconst Game = ({store}) => {\r\n    const {squares, finish} = store.getState()\r\n\r\n    if (finish === false) {\r\n        return (\r\n            <div className=\"game\">\r\n                <Restart store={store}/>\r\n                <table /*onClick={() => store.dispatch(\r\n                    sortSquares(presetField(fillMinesArray()))\r\n                )}*/>\r\n                    <tbody>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id < 9) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 8 && square.id < 18) {\r\n                                return <Square \r\n                                key={square.id}\r\n                                id={square.id} \r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 17 && square.id < 27) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 26 && square.id < 36) {\r\n                                return <Square \r\n                                key={square.id}\r\n                                id={square.id} \r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 35 && square.id < 45) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 44 && square.id < 54) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 53 && square.id < 63) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 62 && square.id < 72) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                        <tr>\r\n                        {squares.map(square => {\r\n                            if (square.id > 71 && square.id < 81) {\r\n                                return <Square \r\n                                key={square.id} \r\n                                id={square.id}\r\n                                symbol={square.symbol} \r\n                                store={store}\r\n                                isClicked={square.isClicked}/>\r\n                            } else {return null}\r\n                        })}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <AboutMe />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"game\">\r\n                <Restart store={store}/>\r\n                <BoomModal store={store} />\r\n                <AboutMe />\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport './App.css';\r\nimport Game from './components/gameScreen/gameScreen'\r\n\r\nconst App = ({store}) => (\r\n  <div className=\"App\">\r\n    <Game store={store} />\r\n  </div>\r\n)\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport storeFactory from './state/store';\r\n\r\nconst store = storeFactory(true);\r\n\r\nconst render = () => ReactDOM.render(<App store={store}/>, document.getElementById('root'));\r\n\r\nstore.subscribe(render)\r\nrender()\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}